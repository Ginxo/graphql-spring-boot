# Coche
type Car @java(package:"com.paradigma.graphql.schema.car.car") {
    id: String! # ! significa obligatorio
    model: Model!
    color: String
    
}

# Coche
type QueryCar @java(package:"com.paradigma.graphql.schema.car.car.query") {
    cars: [Car] # Listado de los coches
    models(id: String): [Model] # Listado de los modelos
    brands(id: String): [Brand] # Listado de las marcas
    countries(id: String): [Country] # Listado de los paises
}

# Modelo
type Model @java(package:"com.paradigma.graphql.schema.car.model") {
    id: String!
    name: String
    brand: Brand!
    year: Int
}

# Marca
type Brand @java(package:"com.paradigma.graphql.schema.car.brand") {
    id: String!
    name: String
    models: [Model] # Listado de los modelos
}

# pais
type Country @java(package:"com.paradigma.graphql.schema.mastertable.country") {
    id: String!
    name: String
}

# Filtro de los coches
#input InputFilterCar @java(package:"com.paradigma.graphql.schema.car.car.filter") {
#    id: Int!
#    name: String
#    model: Model # 
#}



# Objeto de entrada para agrupar las propiedades de un coche 
input InputCreateCar @java(package:"com.paradigma.graphql.schema.car.car.create") {
    modelId: String!
    brandId: String!
    color: String!
}

# Operaciones sobre los coches:
type MutateCars @java(package:"com.paradigma.graphql.schema.car.car") {
     createCar(car:InputCreateCar): Car
     deleteCar(id: String!): Car
}







